defmodule BuiltWithPhoenix.Repo.Migrations.Init do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:users, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v7()"), primary_key: true
      add :email, :citext, null: false
      add :hashed_password, :text, null: false
    end

    create unique_index(:users, [:email], name: "users_unique_email_index")

    create table(:tokens, primary_key: false) do
      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :created_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :extra_data, :map
      add :purpose, :text, null: false
      add :expires_at, :utc_datetime, null: false
      add :subject, :text, null: false
      add :jti, :text, null: false, primary_key: true
    end

    create table(:technologies_organizations, primary_key: false) do
      add :technology_id, :uuid, null: false, primary_key: true
      add :organization_id, :uuid, null: false, primary_key: true
    end

    create table(:technologies, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v7()"), primary_key: true
    end

    alter table(:technologies_organizations) do
      modify :technology_id,
             references(:technologies,
               column: :id,
               name: "technologies_organizations_technology_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:technologies) do
      add :name, :text, null: false
      add :url, :text, null: false
      add :image_url, :text
    end

    create table(:organizations, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v7()"), primary_key: true
    end

    alter table(:technologies_organizations) do
      modify :organization_id,
             references(:organizations,
               column: :id,
               name: "technologies_organizations_organization_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:organizations) do
      add :name, :text, null: false
      add :url, :text, null: false
      add :logo, :text
      add :image, :text
      add :usage_public, :text
      add :usage_private, :text
      add :extra_sites, :text
      add :author_name, :text
      add :author_email, :text
      add :status, :text
    end
  end

  def down do
    alter table(:organizations) do
      remove :status
      remove :author_email
      remove :author_name
      remove :extra_sites
      remove :usage_private
      remove :usage_public
      remove :image
      remove :logo
      remove :url
      remove :name
    end

    drop constraint(
           :technologies_organizations,
           "technologies_organizations_organization_id_fkey"
         )

    alter table(:technologies_organizations) do
      modify :organization_id, :uuid
    end

    drop table(:organizations)

    alter table(:technologies) do
      remove :image_url
      remove :url
      remove :name
    end

    drop constraint(:technologies_organizations, "technologies_organizations_technology_id_fkey")

    alter table(:technologies_organizations) do
      modify :technology_id, :uuid
    end

    drop table(:technologies)

    drop table(:technologies_organizations)

    drop table(:tokens)

    drop_if_exists unique_index(:users, [:email], name: "users_unique_email_index")

    drop table(:users)
  end
end
